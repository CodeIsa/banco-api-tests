{
  "stats": {
    "suites": 6,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-08-01T15:31:29.882Z",
    "end": "2025-08-01T15:31:29.999Z",
    "duration": 117,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "55602f13-eacb-47d8-8c3f-d0d334638c77",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9c516931-c550-4b63-a831-6c4f1796c555",
          "title": "Login",
          "fullFile": "/home/isabela/Documentos/Projetos/banco-api-tests/test/login.test.js",
          "file": "/test/login.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c50864e5-b3b2-4e49-ac07-129bb72ef3d3",
              "title": "POST /login",
              "fullFile": "/home/isabela/Documentos/Projetos/banco-api-tests/test/login.test.js",
              "file": "/test/login.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve retornar 200 com um token em string quando usar credenciais validas",
                  "fullTitle": "Login POST /login Deve retornar 200 com um token em string quando usar credenciais validas",
                  "timedOut": false,
                  "duration": 32,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const bodyLogin = { ...postLogin };\nconst resposta = await request(process.env.BASE_URL)\n  .post(\"/login\")\n  .set(\"Content-Type\", \"application/json\")\n  .send(bodyLogin);\n//console.log(resposta.status)\n//console.log(resposta.body)\nexpect(resposta.status).to.equal(200);\nexpect(resposta.body.token).to.be.a(\"string\");",
                  "err": {},
                  "uuid": "b817fbb8-e406-4176-b29d-1e99cb9a7d1e",
                  "parentUUID": "c50864e5-b3b2-4e49-ac07-129bb72ef3d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b817fbb8-e406-4176-b29d-1e99cb9a7d1e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 32,
              "root": false,
              "rootEmpty": false,
              "_timeout": 200000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 200000
        },
        {
          "uuid": "18f9d497-ccbe-4b77-8864-ffc1c1e24d1c",
          "title": "Transferências",
          "fullFile": "/home/isabela/Documentos/Projetos/banco-api-tests/test/transferencia.test.js",
          "file": "/test/transferencia.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Transferências\"",
              "fullTitle": "Transferências \"before each\" hook in \"Transferências\"",
              "timedOut": false,
              "duration": 6,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "token = await obterToken(\"julio.lima\", \"123456\");",
              "err": {},
              "uuid": "1f240295-464a-4f74-a855-ebc57c238102",
              "parentUUID": "18f9d497-ccbe-4b77-8864-ffc1c1e24d1c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "dd2648de-e712-4096-b9b1-2833804fa0f2",
              "title": "POST /transferencias",
              "fullFile": "/home/isabela/Documentos/Projetos/banco-api-tests/test/transferencia.test.js",
              "file": "/test/transferencia.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve retornar sucesso com 201 quando o valor da transferencia for igual ou acima de R$ 10,00",
                  "fullTitle": "Transferências POST /transferencias Deve retornar sucesso com 201 quando o valor da transferencia for igual ou acima de R$ 10,00",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//usamos shalow copy quando temos esses 3 pontos, é uma copia superficial, usamos quando as propriedade não tem subniveis\nconst bodyTransferencias = { ...postTransferencias };\nconst resposta = await request(process.env.BASE_URL)\n  .post(\"/transferencias\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .set(\"Content-Type\", \"application/json\")\n  .send(bodyTransferencias);\nexpect(resposta.status).to.equal(201);",
                  "err": {},
                  "uuid": "af92ab36-8333-4f65-8375-e3786c1e5165",
                  "parentUUID": "dd2648de-e712-4096-b9b1-2833804fa0f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve retornar falha com 422 com 201 quando o valor d atransferencia for abaixo de R$ 10,00",
                  "fullTitle": "Transferências POST /transferencias Deve retornar falha com 422 com 201 quando o valor d atransferencia for abaixo de R$ 10,00",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const bodyTransferencias = { ...postTransferencias };\nbodyTransferencias.valor = 7;\nconst resposta = await request(process.env.BASE_URL)\n  .post(\"/transferencias\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .set(\"Content-Type\", \"application/json\")\n  .send(bodyTransferencias);\nexpect(resposta.status).to.equal(422);",
                  "err": {},
                  "uuid": "9ccae85e-7634-4bc6-9eef-f17ec5112919",
                  "parentUUID": "dd2648de-e712-4096-b9b1-2833804fa0f2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "af92ab36-8333-4f65-8375-e3786c1e5165",
                "9ccae85e-7634-4bc6-9eef-f17ec5112919"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 35,
              "root": false,
              "rootEmpty": false,
              "_timeout": 200000
            },
            {
              "uuid": "18f85c5b-193a-464e-b2bf-175007cd1b7c",
              "title": "GET /transferencias/{id}",
              "fullFile": "/home/isabela/Documentos/Projetos/banco-api-tests/test/transferencia.test.js",
              "file": "/test/transferencia.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve retornar 200 e dados iguais ao registro de transferencia contido no banco de dados quando o ID for valido",
                  "fullTitle": "Transferências GET /transferencias/{id} Deve retornar 200 e dados iguais ao registro de transferencia contido no banco de dados quando o ID for valido",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const resposta = await request(process.env.BASE_URL)\n  .get(\"/transferencias/1\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .set(\"Content-Type\", \"application/json\");\nconsole.log(resposta.status);\nconsole.log(resposta.body);\nexpect(resposta.status).to.equal(200);\nexpect(resposta.body.id).to.equal(1);\nexpect(resposta.body.id).to.be.a(\"number\");",
                  "err": {},
                  "uuid": "15a3e045-ee77-4659-afe3-2174fbcdba53",
                  "parentUUID": "18f85c5b-193a-464e-b2bf-175007cd1b7c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "15a3e045-ee77-4659-afe3-2174fbcdba53"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 200000
            },
            {
              "uuid": "64d70a06-ace7-4494-afdd-3e78e28b9f6f",
              "title": "GET /transferencias",
              "fullFile": "/home/isabela/Documentos/Projetos/banco-api-tests/test/transferencia.test.js",
              "file": "/test/transferencia.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve retornar 10 elementos na paginacao quando informar limite de 10 registros",
                  "fullTitle": "Transferências GET /transferencias Deve retornar 10 elementos na paginacao quando informar limite de 10 registros",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const resposta = await request(process.env.BASE_URL)\n  .get(\"/transferencias?page=1&limit=10\")\n  .set(\"Authorization\", `Bearer ${token}`)\n  .set(\"Content-Type\", \"application/json\");\nconsole.log(resposta.body);\nexpect(resposta.status).to.equal(200);\nexpect(resposta.body.limit).to.equal(10);\nexpect(resposta.body.transferencias).to.have.lengthOf(10);",
                  "err": {},
                  "uuid": "d6fe91c0-a3d5-4413-a29f-6fdbd6e721c4",
                  "parentUUID": "64d70a06-ace7-4494-afdd-3e78e28b9f6f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d6fe91c0-a3d5-4413-a29f-6fdbd6e721c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 200000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 200000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 200000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}